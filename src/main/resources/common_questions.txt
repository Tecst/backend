1;버블 정렬(Bubble Sort)에 대해 설명해 보세요.;서로 인접한 두 원소를 검사하여 정렬하는 알고리즘으로, 인접한 2개의 레코드를 비교하여 크기가 순서대로 되어있지 않으면 서로 교환한다. 알고리즘에 따라 1회전을 수행하고 나면 가장 큰 자료가 맨 뒤로 이동하게 되므로 2회전에서는 맨 끝에 있는 자료는 정렬에서 제외되고, 2회전을 수행하고 나면 끝에서 두 번째 자료까지는 정렬에서 제외된다. 시간복잡도는 최선, 최악 모두 O(n^2)이다.;algorithm;
2;선택 정렬(Selection Sort)에 대해 설명해 보세요.;제자리 정렬 알고리즘의 하나로, 다음과 같은 순서로 이루어진다. 주어진 리스트 중에 최솟값을 찾는다. 그 값을 맨 앞에 위치한 값과 교체한다(패스(pass)). 맨 처음 위치를 뺀 나머지 리스트를 같은 방법으로 교체한다. 하나의 원소만 남을 때까지 위의 과정을 반복한다. 1회전을 수행하고 나면 가장 작은 값의 자료가 맨 앞에 오게 되므로 그다음 회전에서는 두 번째 자료부터 다른 값과 비교하게 된다. 시간복잡도는 최선, 최악 모두 O(n^2)이다.;algorithm;
3;삽입 정렬(Injection Sort)에 대해 설명해 보세요.;자료배열의 모든 요소를 앞에서부터 차례대로 이미 정렬된 배열 부분과 비교하여, 자신의 위치를 찾아 삽입함으로써 정렬을 완성하는 알고리즘이다. 처음 Key 값이 두 번째 자료부터 시작하여, 그 앞(왼쪽)의 자료들과 비교하여 삽입할 위치를 지정한 후 자료를 뒤로 옮기고 지정한 자리에 자료를 삽입한다. 시간복잡도는최선의경우O(n), 최악의 경우 O(n^2)이다.;algorithm;
4;힙 정렬(Heap Sort)에 대해 설명해 보세요.;최대 힙 트리나 최소 힙 트리를 구성해 정렬하는 알고리즘으로, 내림차순정렬을 위해서는 최소 힙을 구성하고 오름차순정렬을 위해서는 최대 힙을 구성한다. 최대 힙 구현은 다음과 같은 순서로 이루어진다. 정렬해야 할 n개의 요소들로 내림차순을 기준으로 최대 힙(완전 이진 트리 형태)을 만든다.. 그다음으로 한 번에 하나씩 요소를 힙에서 꺼내서 배열의 뒤부터 저장하면 된다. 삭제되는 요소들(최댓값부터 삭제)은 값이 감소하는 순서로 정렬되게 된다. 시간복잡도는 최선, 최악 모두 O(nlog₂n)이다.;algorithm;
5;병합 정렬(Merge Sort)에 대해 설명해 보세요.;분할 정복 알고리즘의 하나로, 문제를 작은 2개의 문제로 분리하고 각각을 해결한 다음, 결과를 모아서 원래의 문제를 해결하는 전략을 사용한다. 과정은 다음과 같다. 리스트의 길이가 0 또는 1이면 이미 정렬된 것으로 본다. 그렇지 않은 경우, 정렬되지 않은 리스트를 절반으로 잘라 비슷한 크기의 두 부분 리스트로 나눈다. 각 부분 리스트를 재귀적으로 합병 정렬을 이용해 정렬한다. 두 부분 리스트를 다시 하나의 정렬된 리스트로 합병한다. 시간복잡도는 최선, 최악 모두 O(nlog₂n)이다.;algorithm;
6;퀵 정렬(Quick Sort)에 대해 설명해 보세요.;분할 정복 알고리즘의 하나로, 문제를 작은 2개의 문제로 분리하고 각각을 해결한 다음, 결과를 모아서 원래의 문제를 해결하는 전략을 사용한다. 과정은 다음과 같다. 리스트 안에 있는 한 요소를 선택한다. 이렇게 고른 원소를 피벗(pivot)이라고 한다. 피벗을 기준으로 피벗보다 작은 요소들은 모두 피벗의 왼쪽으로 옮겨지고 피벗보다 큰 요소들은 모두 피벗의 오른쪽으로 옮겨진다. 피벗을 제외한 왼쪽 리스트와 오른쪽 리스트를 다시 정렬한다. 부분 리스트들이 더 이상 분할이 불가능할 때까지 반복한다. 시간 복잡도는 최선의 경우 O(nlog₂n)이고, 최악의 경우 O(n^2)이다.;algorithm;
7;n개의 배열에서 k(k<=n) 번째로 큰 수를 찾는 문제를 해결하기 위해 어떤 알고리즘을 어떻게 사용할지 방법을 설명해 보세요.;이 경우 빠른 선택(quick select)알고리즘을 사용한다. 이 알고리즘은 퀵 정렬을 활용한 알고리즘이다. 피벗(pivot)을 설정하고 피벗보다 큰 값은 오른쪽, 작은 값은 왼쪽으로 분할하여 정렬한 뒤, 피벗의 인덱스가 k와 같은 경우 인덱스의 값을 리턴한다. 그렇지 않은 경우,인덱스의 값과 k의 값을 비교해서 피벗의 인덱스가 k보다 작을 때는 피벗의 인덱스+1부터 마지막 인덱스까지 다시 Partition 함수에 넘겨준다. 반대로 피벗의 인덱스가 k보다 클 때에는 첫 번째 인덱스부터 피벗의 인덱스-1까지 다시 Partition 함수에 넘겨준다. 빠른 선택 알고리즘의 시간 복잡도는 O(n)이다.;algorithm;
8;인접 행렬과 인접 리스트의 장단점을 서로 비교하며 설명해 보세요.;인접 행렬은 간선이 많은 완전 그래프일 때, graph[x][y]의 값을 확인해서 빠르게 연결 여부를 확인할 수 있다. 그러나 정점의 수가 많을수록 메모리 사용량이 늘어나게 된다. 반대로 인접 리스트는 간선이 적은 희소 그래프일 때, 각 리스트에 담겨 있는 원소를 확인해서 빠르게 인접 노드를 확인할 수 있다.하지만 연결 여부를 확인할 때에는 graph의 원소에서 y가 나올 때까지 탐색해야 하므로 O(E)의 시간이 소요된다(단, 여기서 E는 간선의 개수).;algorithm;
9;최소 신장 트리에 관해 설명해 보세요.;Spanning Tree 중에서 사용된 간선들의 가중치 합이 최소인 트리로, 간선에 가중치를 고려하여 최소 비용의 Spanning Tree를 선택하는 것을 말한다. 즉, 그래프에 있는 모든 정점들을 가장 적은 수의 간선과 비용으로 연결하는 것이다.;algorithm;
10;최소 신장 트리의 알고리즘에 관해 설명해 주세요.;Kruskal MST 알고리즘은 간선 선택을 기반으로 하는 알고리즘으로, 탐욕적인 방법(greedy method)을 이용하여 네트워크(가중치를 간선에 할당한 그래프)의 모든 정점을 최소 비용으로 연결하는 최적 해답을 구하는 것이다. 1) 최소 비용의 간선으로 구성됨 2) 사이클을 포함하지 않음의 조건에 근거하여 각 단계에서 사이클을 이루지 않는 최소 비용 간선을 선택한다.;algorithm;
11;해시 테이블은 무엇이며 언제 적용하나요?;해시테이블은 (Key, Value)로 데이터를 저장하는 자료구조 중 하나로 빠르게 데이터를 검색할 수 있는 자료구조이다. 브루트 포스(완전 탐색)로는 시간 초과에 빠지게 되는 문제에서는 해시테이블을 적용시켜야 한다.;algorithm;
12;DFS와 BFS에 대해 비교해서 설명해 보세요.;DFS는 루트 노드 혹은 임의 노드에서 다음 브랜치로 넘어가기 전에, 해당 브랜치를 모두 탐색하는 방법이고, BFS는 루트 노드 또는 임의 노드에서 인접한 노드부터 먼저 탐색하는 방법이다. DFS의 경우 스택 or 재귀 함수를 통해 구현하며, 모든 경로를 방문해야 할 경우 사용에 적합하다. 반면에 BFS는 큐를 통해 구현하며, 최소 비용에 더 적합하다.;algorithm;
13;LIS(Longest Increasing Sequence)에 적용할 알고리즘은 무엇이 있나요?.;최장 증가 수열(Longest Increasing Sequence)은 원소가 n개인 배열의 일부 원소를 골라내서 만든 부분 수열 중, 각 원소가 이전 원소보다 크다는 조건을 만족하고, 그 길이가 최대인 부분 수열을 최장 증가 부분 수열이라고 한다. 예를 들어 [7,2,3,8,4,5]라는 수열이 있다면 [2,3,4,5]가 LIS가 된다. 이 경우 적용할 수 있는 알고리즘은 DP와 Lower Bound가 있고 시간 복잡도는 각각 O(n^2), O(nlog₂n)이다.;algorithm;
14;LCA(Lowest Common Ancestor) 알고리즘에 관해 설명해 보세요.;LCA 알고리즘이란 최소 공통 조상을 찾는 알고리즘으로, 두 정점 u, v(혹은 a, b)에서 가장 가까운 공통 조상을 찾는 과정을 말한다. 과정은 다음과 같다. 모든 노드에 대한 깊이를 계산한다. 최소 공통 조상을 찾을 두 노드를 확인한다. 먼저 두 노드의 깊이가 동일하도록 거슬러 올라갑니다. 부모가 같아질 때까지 반복적으로 두 노드의 부모 방향으로 거슬러 올라간다. 모든 LCA (a, b)연산에 대하여 앞의 과정을 반복한다.;algorithm;
15;다익스트라(Dijkstra) 알고리즘에 관해 설명해 보세요.;DP를 활용한 최단 경로 탐색 알고리즘으로, 다익스트라 알고리즘을 구현하기 위해선 두 가지를 저장해야 한다. 시작 정점으로부터 정점들의 최단거리를 저장하는 배열과, 방문 여부이다. 과정은 다음과 같다. 출발 노드를 설정하고, 최단거리 테이블을 초기화한다. 방문하지 않은 노드 중 최단거리가 가장 짧은 노드를 선택한다. 해당 노드를 거쳐 다른 노드로 가는 비용을 계산하여 최단거리 테이블을 갱신한다.(단, 현재 테이블의 최단거리보다, 해당 노드를 거쳐가는 비용이 작으면 작은 경로로 교체한다.) 위의 과정을 반복한다. 시간 복잡도는 인접 행렬로 구현할 경우 O(n^2)이고, 인접 리스트로 구현할 경우 O(nlog₂n)이다.;algorithm;
16;비트 마스크(Bit Mask)에 관해 설명하고 왜 사용하는지 말해보세요.;비트 마스크란 정수의 이진수 표현을 활용한 기법으로 DP나 순열 등, 배열 활용만으로 해결할 수 없는 문제에 유용하다. 작은 메모리와 빠른 수행 시간으로 해결이 가능하고, 간결한 코드로 작성할 수 있다.;algorithm;
17;재귀 알고리즘에 관해 설명해 보세요.;함수 내부에서 함수 자기 자신을 또다시 호출하여 문제를 해결하는 알고리즘으로, 자기 자신을 계속해서 호출하여 끝없이 반복되게 되므로 반복을 중단할 조건이 반드시 필요하다.;algorithm;
18;재귀와 반복의 차이점은 무엇인가요?;재귀는 함수 내에서 자기 자신을 반복하는 호출이고 반복은 조건이 참인 경우 계속하여 반복되는 명령어 블록이다.;algorithm;
19;동적 계획법(Dynamic Programming/DP)이란?;동적 계획법이란 복잡한 문제를 간단한 여러 개의 문제로 나누어 푸는 방법을 말한다. 여러 개의 하위 문제(subproblem)로 나누어 그 해결책을 저장하는 메모이제이션(Memoization) 기법으로 결과를 재활용할 수 있어 속도를 향상시킨다.;algorithm;
20;동적 계획법(Dynamic Programming/DP)이 갖는 2가지 조건은 무엇인가요?;동적 프로그래밍으로 문제를 해결하기 위해서는 1) 중복되는 부분 문제 2) 최적 부분 구조라는 두 가지 조건을 만족해야 한다. 중복되는 부분 문제는 같은 부분 문제가 여러 번 재사용되는 것이고, 최적 부분 구조는 새로운 부분 문제의 정답을 다른 부분 문제의 정답으로부터 구할 수 있는 것이다.;algorithm;
21;운영체제란?;운영체제는 하드웨어 및 컴퓨터 시스템의 자원들을 효율적으로 관리하며, 응용 프로그램과 하드웨어 간의 인터페이스로써 다른 응용 프로그램이 유용한 작업을 할 수 있도록 환경을 제공해 준다. 즉, 사용자가 컴퓨터를 편리하고 효과적으로 사용할 수 있도록 환경을 제공하는 시스템 소프트웨어이다.;os;
22;컴파일러와 인터프리터의 차이점은 무엇인가요?;컴파일러(compile)는 특정 프로그래밍 언어로 쓰여있는 문서를 다른 프로그래밍 언어로 옮기는 언어 변역 프로그램이고, 인터프리터(interpreter)는 프로그래밍 언어의 원시코드를 바로 실행하는 컴퓨터 프로그램이다. 둘 다 영어와 같은 인간의 언어로 작성한 코드를 컴퓨터가 이해할 수 있도록 변환시킨다는 점에서는 같지만, 다음과 같은 차이가 있다. 먼저 인터프리터는 소스코드를 한 줄씩(onestatement) 해석하지만, 컴파일러는 전체 프로그램 코드(entireprogramcode)를 스캔하고 코드 전체를 한 번에 변환시킨다. 따라서 인터프리터는 소스코드를 해석하는 데는 적은 시간이 걸리지만 실행 시간은 느린 반면, 컴파일러는 소스코드를 해석하는 데는 많은 시간이 걸리지만 실행 시간은 빠르다.;os;
23;프로세스와 스레드의 차이점은 무엇인가요?;프로세스는 컴퓨터에서 연속적으로 실행되고 있는 컴퓨터 프로그램이고, 스레드는 프로세스 내에서 실행되는 여러 흐름의 단위이다. 프로세스는 자신만의 고유 공간과 자원을 할당받아 사용하는 데 반해, 스레드는 다른 스레드와 공간, 자원을 공유하면서 사용하는 차이가 있다.;os;
24;Context Switching이 무엇인가요?;Context Switching이란 동작 중인 프로세스가 대기를 하면서 해당 프로세스의 상태(Context)를 보관, 대기하던 다음 프로세스가 동작하면서 이전에 보관한 프로세스의 상태를 복구하는 작업이다.;os;
25;Critical Section(임계 영역)에 대해 설명해 보세요.;임계 영역이란 프로세스 간에 공유 자원을 접근하는 데 있어 문제가 발생하지 않도록 한 번에 하나의 프로세스만 이용하게끔 보장해 줘야 하는 영역을 말한다. 임계 영역 문제를 해결하기 위해서는 상호 배제(Mutual Exclusion), 진행(Progress), 한정 대기(Bounded Waiting)라는 3가지 조건을 충족해야 한다.;os;
26;CPU 스케줄링 중 선점형에서 하나의 알고리즘을 선택해 설명해 보세요.;선점형 스케줄링에는 Priority Scheduling, Round Robin, Multilevel-Queue(다단계 큐), Multilevel-Feedback-Queue(다단계 피드백 큐)가 있다. Priority Scheduling은 정적/동적으로 우선순위를 부여하여 우선순위가 높은 순서대로 처리한다. Round Robin은 FCFS에 의해 프로세스들이 보내지면 각 프로세스는 동일한 시간의 Time Quantum(실행의 최소 단위 시간) 만큼 CPU를 할당받는다. Multilevel-Queue는 작업을 여러 종류의 그룹으로 나누어 여러 개의 큐를 이용하는 기법이다. Multilevel-Feedback-Queue는 다단계 큐에서 자신의 Time Quantum을 다 채운 프로세스는 밑으로 내려가고 자신의 Time Quantum을 다 채우지 못한 프로세스는 원래 큐 그대로 할당하는 기법이다.;os;
27;CPU 스케줄링 중 비선점형에서 하나의 알고리즘을 선택해 설명해 보세요.;비선점형 스케줄링에는 FCFS(First Come First Served), SJF(Shortest Job First), HRN(Hightest Response-ratio Next)가있다. FCFS(First Come First Served)는 큐에 도착한 순서대로 CPU를 할당한다. SJF(Shortest Job First)는 수행 시간이 가장 짧다고 판단되는 작업을 먼저 수행한다. HRN(Hightest Response-ratio Next)는 우선순위를 계산하여 점유 불평등을 보완한 방법이다.;os;
28;콘보이 현상(convoy effect)이란 무엇이고, 콘보이 현상이 발생될 수 있는 CPU 스케줄러 알고리즘은 무엇인가요?;콘보이 현상이란 작업 시간이 긴 프로세스가 먼저 큐에 도착해서 다른 프로세스의 실행 시간이 전부 늦춰져 효율성을 떨어뜨리는 현상을 말한다. FCFS(First Come First Served) 스케줄링은 비선점형으로, 순차적으로 먼저 큐에 들어온 작업부터 실행하므로 콘보이 현상이 발생할 수 있다.;os;
29;멀티 프로세스와 멀티 스레드를 설명해 보세요.;Multi-Process는 하나의 프로그램을 여러 개의 프로세스로 구성하여 각 프로세스가 1개의 작업을 처리하도록 하는 것이고, Multi-Thread는 하나의 프로그램에서 둘 이상의 프로세스가 필요할 때 하나의 프로그램을 여러 개의 스레드로 구성하여 각 스레드가 1개의 작업을 처리하도록 하는 것이다.;os;
30;멀티 스레드 프로그래밍 작성 시 유의점에 대해 말해보세요.;멀티 스레드 프로그램을 개발한다면, 다수의 스레드가 공유 데이터에 동시에 접근하는 경우에 상호 배제를 제거해 교착상태를 예방하고 동기화 기법을 통해 동시성 문제가 발생하지 않도록 주의해야 한다.;os;
31;데드락(DeadLock, 교착상태)에 대한 설명과 발생 조건에 대해 말해보세요.;데드락(DeadLock) 또는 교착상태란 한정된 자원을 여러 프로세스가 사용하고자 할 때 발생하는 상황으로, 프로세스가 자원을 얻기 위해 영구적으로 기다리는 상태를 말한다. 데드락의 발생 조건으로는 비선점, 순환 대기, 점유 대기, 상호 배제가 있다.;os;
32;회피 기법인 은행원 알고리즘이 뭔지 설명해 보세요.;은행원 알고리즘은 현재 가용자원(Available)과 각 프로세스들이 작업을 완료하기 위해 필요한 자원(Need)을 비교한다. 그러면 당장 작업을 마칠 수 있는 프로세스부터 자원을 할당하여 그 프로세스가 작업을 완료하고 반환하는 자원을 다른 프로세스에게 다시 할당한다.;os;
34;동기와 비동기의 차이에 대해 설명해 보세요.;동기는 순차적, 직렬적으로 테스크를 수행하고, 비동기는 병렬적으로 테스크를 수행한다. 예를 들어, 서버에서 데이터를 가져와서 화면에 표시하는 작업을 수행할 때 동기는 서버에 데이터를 요청한 뒤 응답될 때까지 이후 테스크들은 블로킹(Blocking, 작업 중단) 되지만 비동기는 서버에 데이터를 요청한 이후 서버로부터 데이터가 응답될 때까지 대기하지 않고(Non-Blocking) 즉시 다음 테스크를 계속 수행한다.;os;
35;세마포어(Semaphore)와 뮤텍스(Mutex)의 차이점은 무엇인가요?;Mutex는 상태가 0, 1뿐이므로 Lock을 가질 수 있고, 소유하고 있는 스레드만이 이 Mutex를 해제할 수 있다. 반면 Semaphore는 Semaphore를 소유하지 않는 스레드가 Semaphore를 해제할 수 있다. 따라서 Mutex는 자원을 소유할 수 있고, 책임을 가지는 반면 Semaphore는 자원 소유가 불가능하다. Mutex는 동기화 대상이 오직 1개일 때 사용하며, Semaphore는 동기화 대상이 1개 이상일 때 사용한다.;os;
36;메모리 관리 전략에 대해 말해보세요.;메모리는 CPU가 직접 접근하는 유일한 저장 장치로 메모리 시스템(하드웨어)은 주소(메모리 위치)를 관리하며 할당과 접근을 제어한다. 이는 제한된 물리적 메모리의 효율적인 사용(할당)과 효율적인 메모리 참조(논리-물리 주소 할당)를 위함이다. 종류에는 CPU에서 실행 중이지 않은 프로세스의 메모리 이미지를 저장 장치에 이동시키는 Swapping(스와핑),각 프로세스가 필요로 하는 메모리 요구량을 분석해서 필요한 메모리를 연속으로 메모리에 할당하는 Contiguous Memory Allocation(연속 메모리 할당), 프로세스가 사용하는 주소 공간을 여러 개로 분할하여 비연속적인 물리 메모리 공간에 할당하는 Paging(페이징), 프로세스가 필요로 하는 메모리 공간을 분할하여 비연속적인 물리 메모리 공간에 할당하는 Segmentation(세그멘테이션)이 있다.;os;
37;페이징과 세그먼테이션(PDF) 기법의 차이점은 무엇인가요?;단순 페이지에서 각 프로세스는 프레임과 같은 길이를 가진 균등 페이지로 나뉘며, 외부 단편화가 생기지 않지만 내부 단편화가 존재할 수 있다. 반면에 단순 세그먼테이션은 각 프로세스가 여러 세그먼트로 나뉘고, 내부 단편화는 생기지 않지만 외부 단편화가 존재할 수 있다. 가상 메모리 페이징에서는 단순 페이징과 비교해 프로세스 페이지 전부를 로드할 필요가 없고, 필요한 페이지가 있으면 나중에 자동으로 불러들인다. 단순 페이징과 마찬가지로 외부 단편화가 생기진 않지만 복잡한 메모리 관리로 오버헤드가 발생할 수 있다. 가상 메모리 세그먼테이션은 필요하지 않은 세그먼트들은 로드되지 않는다. 대신 필요한 세그먼트가 있을 때 자동으로 불러들이게 된다. 내부 단편화가 생기지 않지만 복잡한 메모리 관리로 오버헤드가 발생할 수 있다.;os;
38;페이지 교체 알고리즘 중 LRU에 대해 설명해 보세요.;LRU(Least Recently Used)는 페이지를 교체하기 위한 알고리즘 중 하나로, 실제 메모리의 페이지들 중에서 가장 오랫동안 사용되지 않은 페이지를 가장 먼저 내려보내는 방식이다.;os;
39;CISC/RISC의 차이점을 말해보세요.;CISC는 필요한 모든 명령어 셋을 갖추도록 설계된 마이크로프로세서로서, 복잡하고 기능이 많은 명령어로 구성되어 있고 속도가 느리고 가격이 비싸며 효율성이 떨어진다. RISC는 적은 수의 컴퓨터 명령어를 수행하도록 설계된 마이크로프로세서로써, CPU의 명령어를 최소화하여 단순하게 제작되었고 속도가 빠르고 가격이 저렴하며 대단히 효율적이고 특화된 CPU 구조이다.;os;
40;Cache Memory에 대해 말해보세요.;캐시 메모리(Cache Memory)는 CPU와 메모리의 속도 차이로 인한 병목 현상을 완화하기 위해 사용한다. 캐시 메모리는 메인 메모리에서 자주 사용하는 프로그램과 데이터를 저장해 두어 속도를 빠르게 한다. 이런 예측을 취해 캐시의 지역성(Locality)을 이용하는데, 이는 데이터에 대한 접근이 시간적 혹은 공간적으로 가깝게 발생하는 것을 뜻한다. 캐시의 적중률(Hitrate)을 극대화하여 캐시가 효율적으로 동작하기 위해 사용되는 성질이다.;os;
41;웹 동작 방식에 대해 설명해 보세요.;웹 동작 방식은 다음과 같은 순서로 진행된다. 사용자가 브라우저에 URL을 입력한다. 브라우저는 DNS를 통해 서버의 진짜 주소를 찾는다. HTTP 프로토콜을 사용하여 HTTP 요청 메시지를 생성한다. TCP/IP 연결을 통해 HTTP 요청이 서버로 전송된다. 서버는 HTTP 프로토콜을 활용해 HTTP 응답메시지를 생성한다. TCP/IP 연결을 통해 요청한 컴퓨터로 전송된다. 도착한 HTTP 응답메시지는 웹페이지 데이터로 변환되고, 웹브라우저에 의해 출력되어 사용자가 볼 수 있게 된다.;network;
43;TCP와 UDP의 차이점은 무엇인가요?;TCP는 연결형 서비스로 3 way handshaking 과정을 통해 연결을 설정한다. 그렇기 때문에 높은 신뢰성을 보장하지만 속도가 비교적 느리다. UDP는 비연결형 서비스로 신뢰성은 떨어지지만 수신 여부를 확인하지 않기 때문에 속도가 빠르다. TCP는 신뢰성이 중요한 파일 교환과 같은 경우에 쓰이고 UDP는 실시간성이 중요한 스트리밍에 자주 사용된다.;network;
44;3 way handshake에 대해 설명해 보세요.;TCP는 정확한 전송을 보장하기 위해 3 way handshake 과정을 진행한다. 순서는 다음과 같다. 클라이언트가 서버에게 SYN 패킷을 보낸다.(sequence:x) 서버가 SYN(x)을 받고, 클라이언트로 받았다는 신호인 ACK와 SYN 패킷을 보낸다.(sequence:y, ACK:x+1) 클라이언트는 서버의 응답은 ACK(x+1)와 SYN(y) 패킷을 받고, ACK(y+1)를 서버로 보낸다. 이렇게 3번의 통신이 완료되면 연결이 성립된다.;network;
46;공인 IP와 사설 IP 차이점은 무엇인가요?;공인 IP는 ISP(인터넷 서비스 공급자)가 제공하는 IP 주소이며, 외부에 공개되어 있는 IP 주소이다. 사설 IP는 일반 가정이나 회사 내 등에 할당된 네트워크 IP 주소이며, IPv4의 주소 부족으로 인해 서브넷팅된 IP이기 때문에 라우터(공유기)에 의해 로컬 네트워크 상의 PC나 장치에 할당된다. 사설 IP 주소만으로는 인터넷에 직접 연결할 수 없고, 라우터를 통해 1개의 공인 IP를 할당하고, 라우터에 연결된 개인 PC는 사설 IP를 각각 할당받아 인터넷에 접속할 수 있다.;network;
47;HTTP와 HTTPS의 차이점은 무엇인가요?;HTTP는 인터넷상에서 클라이언트와 서버가 자원을 주고받을 때 쓰는 통신규약으로, 누군가 네트워크에서 신호를 가로채면 내용이 노출되는 보안 이슈가 존재한다. 이런 보안 문제를 해결해 주기 위한 프로토콜이 HTTPS이다. HTTPS는 인터넷상에서 정보를 암호화하는 SSL 프로토콜을 사용해 클라이언트와 서버가 자원을 주고받을 때 쓰는 통신규약으로 텍스트를 공개키 암호화 방식으로 암호화한다.;network;
48;HTTP Method가 각각 사용되는 경우에 대해서 설명해 보세요.;GET은 데이터를 조회할 때 사용하고, POST는 요청 데이터를 처리할 때 사용한다. PUT은 데이터를 변경할 때, PATCH는 일부 데이터만 변경할 때, DELETE는 데이터를 삭제할 때 사용한다.;network;
49;GET과 POST 차이점은 무엇인가요?;GET은 데이터를 조회하기 위해 사용되는 방식으로 데이터를 헤더에 추가하여 전송하는 방식이다. URL에 데이터가 노출되기 때문에 보안적으로 중요한 데이터를 포함하면 안 된다. POST는 데이터를 추가 또는 수정하기 위해 사용되는 방식으로 데이터를 바디에 추가하여 전송하는 방식이다. 완전히 안전하다는 것은 아니지만 GET보다는 안전하다.;network;
50;Restful API에서의 URL과 일반적인 HTTP에서의 URL의 차이는?;일반적인 HTTP URL은 기능에 중점을 두어 설계하지만 Restful API은 자원에 중점을 두고 설계한다.;network;
51;쿠키(Cookie)와 세션(Session)의 차이점은 무엇인가요?;쿠키는 서버가 사용자의 웹브라우저에 저장하는 작은 기록정보 파일을 말하고, 세션은 일정 시간 동안 같은 사용자(브라우저)로부터 들어오는 일련의 요구를 하나의 상태로 보고, 그 상태를 유지시키는 기술이다. 쿠키와 세션은 비슷한 역할을 하며, 동작원리도 비슷하지만 큰 차이점은 사용자의 정보가 저장되는 위치이다. 쿠키는 서버의 자원을 전혀 사용하지 않으며, 세션은 서버의 자원을 사용한다. 보안 면에서는 세션이 더 우수하지만 속도 면에서는 쿠키가 더 우수하다.;network;
52;세션 기반 인증과 토큰 기반 인증의 차이점은 무엇인가요?;세션 기반 인증은 클라이언트로부터 요청을 받으면 클라이언트의 상태 정보를 저장하므로 Stateful한 구조를 가지고, 토큰 기반 인증은 상태 정보를 서버에 저장하지 않으므로 Stateless한 구조를 가진다.;network;
53;JWT 토큰에 대해 설명해보세요.;JWT는 JSON 포맷을 이용하는 Claim 기반의 웹 토큰이며, 토큰 자체를 정보로 사용하는 Self-Contained 방식으로 정보를 안전하게 전달한다. JWT는 헤더(Header).내용(Payload).서명(Signature)로 구성되며 각 파트를 점(.)으로 구분한다.;network;
54;대칭키와 공개키 암호화 방식에 대해 설명해 보세요.;대칭키와 비대칭키는 양방향 암호화 방식이며, 대칭키는 암호화와 복호화에 같은 암호키를 쓰는 암호화 알고리즘이고 비대칭키는 암호화와 복호화 할 때 서로 다른 키를 사용하는 암호화 알고리즘이다. 대칭키는 중간에 누군가 암호키를 가로채면 암호화된 정보가 유출될 수 있다는 단점이 있어 이를 보완한 새로운 방식이 비대칭키(공개키)이다.;network;
55;LAN과 WAN의 차이점은 무엇인가요?;LAN(Local Area Network)은 근거리 통신 네트워크로 대학 캠퍼스나 건물과 같은 일정 지역 내의 네트워크를 구성하는 형태이고, WAN(Wide Area Network)은 광범위한 지역을 수용하며, 하나의 국가 내에서 도시와 도시, 혹은 국가와 국가 간을 연결하려는 목적으로 수백~수천km까지의 범위를 포함할 수 있도록 구성된 광역 네트워크 시스템이다.;network;
56;HTTP, FTP, Telnet 등 주요 포트 번호는 무엇인가요?;HTTP는 80, FTP는 20, 21, TFTP는 69, Telenet은 23, SMTP는 25, SNMP는 161, DNS는 53을 사용한다.;network;
57;로드 밸런싱(Load Balancing)은 무엇인가요?;로드밸런싱은 분산식 웹서비스로, 여러 서버에 부하(Load)를 나누어주는 역할을 한다. LoadBalancer를 클라이언트와 서버 사이에 두고, 부하가 일어나지 않도록 여러 서버에 분산시켜주는 방식이다. 서비스를 운영하는 사이트의 규모에 따라 웹서버를 추가로 증설하면서 로드밸런서로 관리해 주면 웹서버의 부하를 해결할 수 있다.;network;
58;WAS란?;WAS는 Web Application Server의 약자로, DB 조회 및 다양한 로직 처리 요구 시 동적인 콘텐츠를 제공하기 위해 만들어진 애플리케이션 서버이며 웹 서버의 기능들을 구조적으로 분리하여 처리하는 역할을 한다. 주요 기능으로는 프로그램 실행 환경 및 DB 접속 기능 제공, 여러 트랜잭션 관리, 비즈니스 로직 수행 등이 있으며, WAS에는 Tomcat, WebSphere, WebLogic  등이 있다.;web
59;WAS가 필요한 이유는?;WAS를 통해 요청에 맞는 데이터를 DB에서 가져와 비즈니스 로직에 맞게 그때마다 결과를 만들고 제공하면서 자원을 효율적으로 사용할 수 있기 때문이다.;web
60;DOM이란?;Document Object Model(문서 객체 모델)의 약자로, HTML, XML 문서의 프로그래밍 인터페이스이다. 문서의 구조화된 표현(structured representation)을 제공하며 프로그래밍 언어가 DOM 구조에 접근하는 방법을 제공하고 문서구조, 스타일, 내용 등을 변경할 수 있도록 한다.;web
61;HTTPS란?;HTTPS란 인터넷상에서 정보를 암호화하는 SSL(Secure Socket Layer) 프로토콜을 이용하여 웹 브라우저(클라이언트)와 서버가 데이터를 주고받는 통신규약으로, 기존의 HTTP가 위변조에 취약하다는 점을 보완하기 위해 암호화나 인증구조를 더한 것이다. HTTPS는 SSL(보안 소켓 계층)을 사용함으로써 HTTP의 보안 문제를 해결하고 SSL은 서버와 브라우저 사이에 암호화된 연결을 도와 민감정보의 도난 방지 역할을 한다.;web
62;SQL Injection이란?;Web Hacking 기법의 하나로, 웹 애플리케이션에서 뒷단에 있는 Database에 질의하는 과정 사이에 일반적인 값 외에 악의적 의도를 갖는 구문을 삽입하여 공격자가 원하는 SQL 쿼리문을 실행하는 기법이다. 주로 사용자가 입력한 데이터를 제대로 필터링, 이스케이핑하지 못했을 경우에 발생한다.;web
63;JWT란?;JSON 포맷을 이용하여 사용자에 대한 속성을 저장하는 Claim 기반의 web Token이다. 토큰 자체를 정보로 사용하는 Self-Contained 방식이기 때문에 정보를 안전하게 전달할 수 있으며 크기가 작기 때문에 URL 파라미터나 HTTP Header에 담아서 빠르게 전송할 수 있다.;web
64;OAuth란?;인터넷 사용자들이 비밀번호를 제공하지 않고 다른 웹사이트상의 자신들의 정보에 대해 웹사이트나 애플리케이션의 접근 권한을 부여할 수 있는 공통적인 수단으로써 사용되는 접근 위임을 위한 개방형 표준이다. 사용자에게 Google, Naver 등의 외부 소셜 계정을 기반으로 한 간편 회원가입 및 로그인 기능을 제공할 수 있다.;web
65;AJAX의 장점 및 단점을 설명하세요.;비동기 통신이 가능하고 접근이 용이하며 페이지 이동 없이 고속으로 화면 전환이 가능하다. 또한 다양한 오픈 소스 프레임워크(Prototype, Dojo, jQuery, Google web Toolkit 등) 제공이 가능하며 화려한 사용자인터페이스를 제공 가능하다는 장점이 있다. 반면 브라우저 호환성에 자유롭지 못하며, Ajax가 포함된 HTML 문서를 제공한 웹서버가 아닌 다른 웹서버로 요청을 보낼 수 없고, 클라이언트 PC의 파일에 접근할 수 없다는 단점이 있다.;language
66;Serialization(직렬화)이란?;추후 재구성할 수 있도록 자바 객체를 JSON으로 변환해 주거나 JSON을 자바 객체로 변환해 주는 라이브러리이다. 객체의 상태 혹은 데이터구조를 기록할 수 있는 포맷으로 변환해 준다.;language
67;DAO(Data Access Object)란?;DAO는 DB에 데이터를 조회하거나 조작하는 기능을 전담한다.;web
68;Spring JDBC란?;데이터베이스 테이블과 자바 객체 사이의 단순한 매핑을 간단한 설정을 통해 처리하는 것이다. Spring에서는 JDBC와 ORM 프레임워크를 직접 지원하기 때문에 별도의 작성 없이 모두 처리되는 장점이 있다.;web
69;IOC란?;인스턴스의 생성부터 소멸까지 개발자가 아닌 컨테이너가 대신 관리해 주는 것을 말한다. 인스턴스 생성의 제어를 Servlet과 같은 bean을 관리해 주는 컨테이너가 관리한다.;web
70;MVC1과 MVC2 패턴의 차이점을 설명하세요.;MVC1은 JSP 페이지 내에서 로직 처리를 위해 자바 코드가 함께 사용된다. 요청이 오면 직접 자바 빈이나 클래스를 통해 작업을 처리하고 이를 클라이언트에 출력해 준다. 구조가 단순한 장점이 있지만 JSP 내에서 HTML 코드와 자바 코드가 같이 사용되면서 복잡해지고 유지보수가 어려운 단점이 있다. MVC2는 모든 처리를 JSP만이 아닌 서블릿을 만들어 역할 분담을 하는 패턴이다. 요청 결과를 출력해 주는 뷰만 JSP가 담당하며, 흐름 제어 및 비즈니스 로직에 해당하는 컨트롤러 역할은 서블릿이 담당하게 된다. 이와 같은 역할 분담으로 인해 유지보수가 용이해지는 장점이 있으나 구조가 복잡해지는 단점이 있다.;web
71;스프링과 스프링부트의 차이점은?;스프링부트는 스프링에서 사용하는 프로젝트를 간편하게 셋업 할 수 있는 서브 프로젝트이다. 독립 컨테이너에서 동작할 수 있어 임베디드 톰캣이 자동 실행된다.;web
72;[Java] 메모리 영역은?;메소드, 힙, 스택, pc 레지스터, 네이티브 영역으로 구분된다. 메소드 영역은 클래스가 로딩될 때 생성되며 주로 static 변수가 저장된다. 힙 영역은 런타임 시 할당되며 주로 객체가 저장된다. 스택 영역은 컴파일 시 할당되며 메소드 호출 시 지역 변수가 저장된다. pc 레지스터는 스레드가 생성될 때마다 생성되는 영역으로 다음 명령어의 주소가 있다. 네이티브 영역은 자바 외의 언어로 작성된 코드를 위한 영역이다.;language
73;스레드 생성 방법 및 장단점은?;스레드는 Runnable(인터페이스)로 선언된 클래스 또는 Thread 클래스를 상속받아 run() 메소드 구현 시 생성할 수 있다. 빠른 프로세스 생성이 가능하고 메모리를 적게 사용할 수 있으며 정보 공유가 쉬운 장점이 있지만 데드락에 빠질 위험성이 있다.;language
74;API의 장점은?;API 사용 시 구현 방식을 모르더라도 제품 또는 서비스가 서로 커뮤니케이션할 수 있으며 애플리케이션 개발을 간소화하여 시간 및 비용 절약이 가능하다.;language
75;RIA(Rich Internet Application)이란?;일반 데스크탑 애플리케이션과 같이 풍부한 사용자인터페이스를 제공하고, 다이나믹하며 모든 처리 과정을 새로고침 없이 할 수 있도록 지원해 주는 웹 애플리케이션이다.;language
76;PCB란?;Process Control Block의 약자로 프로세스에 대한 정보를 저장하고 있는 자료 구조 단위이며, 프로세스의 PID, 메모리 정보, 프로세스 상태 정보, CPU 스케줄링 정보 등을 담고 있다.;architecture
77;cache(캐시)란?;연산에 필요한 데이터, 값을 미리 복사해 놓는 임시메모리이다. 캐시에 데이터를 미리 복사해 둘 경우 계산이나 접근 시간 없이 빠른 속도로 데이터에 접근 가능하다는 장점이 있으나, 속도가 빨라질수록 용량이 작고 가격이 높아지는 등 비용 측면에서의 단점이 존재한다.;architecture
78;프로그램 실행 순서를 설명하세요.;1. 사용자가 운영체제에 프로그램 실행을 요청한다. 2. 운영체제는 프로그램의 정보를 HDD로부터 읽어 할당된 메인 메모리(code, data, stack, heap 등)에 적재한다. 3. CPU는 메인 메모리에서 읽어 온 정보를 바탕으로 차례로 코드를 실행한다.;architecture
79;RISC와 CISC란?;프로세서가 가진 명령어 세트를 기준으로 RISC와 CISC로 구분된다. RISC(Reduce Instruction Set Computer)는 핵심적인 명령어를 기반으로 최소한의 명령어 세트를 구성한 프로세서이다. 고정적인 길이와 간단한 명령어로 빠른 동작이 가능하며, 적은 명령어 세트를 가지고 있으므로 프로그램을 구성하는 명령어가 단순하지만, 다수의 명령어가 필요하다. CISC(Complex Instruction Set Computer)는 연산을 처리하는 복잡한 명령어들을 수백 개 이상 탑재하고 있는 프로세서이다. 명령어 길이가 다양하며 개수가 많아 프로그램의 구성이 복잡해지지만, 소수의 명령어로 구현할 수 있다.;architecture
80;컴퓨터 하드웨어의 구성요소는?;컴퓨터는 중앙 처리 장치(CPU), 메모리, I/O 장치로 구성되어 있다. CPU는 메모리로부터 명령어를 받아와 기계어로 변환(CU) 및 연산(ALU)을 수행한다. 메모리는 RAM, HDD 등 명령어 및 데이터를 적재하는 공간이고, I/O 장치는 데이터를 입출력하기 위한 컴퓨터의 외부 장치를 의미한다.;architecture
81;데이터 해저드란?;데이터 해저드는 이전 명령어의 결과를 기반으로 다음 명령이 수행될 때 파이프라인이 지연되는 경우 발생하는 것으로, 컴퓨터 파이프라인에서는 앞선 명령어에 종속성을 가질 때 데이터 해저드가 일어난다. 이를 해결하기 위해서는 별도의 하드웨어를 추가하여 정상적으로는 얻을 수 없는 값을 내부 자원으로부터 미리 받아 오는 것을 의미하는 전방 전달(forwarding) 또는 우회 전달(bypassing)을 통해 레지스터나 메모리에 아직 나타나지 않은 데이터를 기다리지 않고 데이터 패스를 추가로 하드웨어에 연결하여 내부 버퍼로부터 가져와야 한다.;architecture
82;명령어 처리 과정을 설명하세요.;명령어 처리 과정은 인출 사이클(Fetch Cycle)과 실행 사이클(Execute Cycle)로 나뉜다. 인출 사이클은 우선 PC에 저장된 주소를 MAR로 전달하고 해당 주소에서 명령어를 인출한다. 그리고 해당 명령어를 명령어 버퍼 레지스터(MBR)에 저장하고 PC값을 1 증가시킨다. 마지막으로 명령어를 명령어 레지스터(IR)에 전달하면 인출 사이클이 완료된다. 실행 사이클은 데이터를 인출하고 데이터 처리 및 해당 데이터를 저장하는 과정을 거쳐 완료된다.;architecture
83;오버로딩과 오버라이딩의 차이는?;오버 로딩은 메소드의 이름은 같고 매개변수를 다르게 함으로써 여러 메소드를 만드는 것이고 오버라이딩은 부모 클래스로부터 상속받은 메소드를 재정의하는 것이다.;language
84;추상 클래스와 인터페이스의 차이는?;추상 클래스는 클래스 내에 추상 메소드가 하나 이상 포함되거나 abstract로 정의된 경우 extends를 통해 기능을 이용하고 확장하도록 하는 클래스이고, 인터페이스는 모든 메소드가 추상 메소드인 경우 여러 implements가 가능해 다중 상속 구현이 가능하다.;language
85;제네릭이란?;클래스에서 사용할 타입을 클래스 외부에서 설정하도록 만드는 것으로, 제네릭으로 선언한 클래스는 내가 원하는 타입으로 만들어 사용할 수 있다.;language
86;접근지정자 4가지를 설명하세요.;접근 지정자에는 public, protected, default, private가 있다. public은 모든 접근 허용, protected는 상속받은 클래스 또는 동일 패키지만의 접근 허용, default는 기본 제한자로 자신 클래스 내부 또는 동일 패키지만의 접근 허용, private는 외부 접근이 불가능해 같은 클래스 내에서만 접근할 수 있다.;language
87;Call by Value와 Call by Reference의 차이점은?;Call by Value는 값에 의한 호출로, 값을 복사해서 새로운 함수로 넘기는 호출 방식이기 때문에 원본값이 변경되지 않지만, Call by Reference는 참조에 의한 호출로, 주솟값을 인자로 전달하는 호출 방식이기 때문에 원본값이 변경된다.;language
88;배열과 연결리스트의 차이점은?;배열은 인덱스를 가져 데이터를 한 번에 접근하기 때문에 접근 속도가 빠르나 크기 변경이 불가능하여 데이터 삽입 삭제 시 해당 위치의 다음 위치부터 모든 데이터의 위치를 변경해야 한다. 연결리스트는 인덱스 대신 현재 위치의 이전 또는 다음 위치를 기억하며, 크기 변경이 가능하고 인덱스가 아닌 연결된 링크를 따라가야 접근할 수 있어 속도가 느리지만 데이터 삽입 삭제 시 논리 주소만 변경하면 되므로 사용이 용이하다.;language
89;Hash란?;데이터 삽입 삭제 시 기존 데이터를 밀어내거나 지우지 않고 데이터와 연관된 고유한 숫자를 생성하여 인덱스로 사용하는 방식으로, 검색 속도가 매우 빠르다.;language
90;메모리 및 성능 개선을 위한 방법을 설명하세요.;static을 사용해 선언한다. 인스턴스 변수에 접근할 일이 없는 경우 static 메소드를 선언하여 호출 시 모든 객체가 서로 공유될 수 있으므로 메모리가 절약되고 연속적으로 그 값의 흐름을 이어 갈 수 있는 장점이 있다.;language
91;구조체와 클래스의 차이는?;구조체는 하나의 구조로 묶일 수 있는 변수들의 집합이지만 클래스는 변수 외에 메소드도 포함할 수 있다.;language
92;다형성이란?;서로 다른 클래스로부터 만들어진 객체지만 같은 부모의 class 타입으로 대입될 수 있는 성질이다.;web
93;쿠키(Cookie)와 세션(Session)의 공통점 및 차이점은?;쿠키와 세션 모두 사용자의 데이터를 저장하는 데 사용되나, 쿠키는 client 컴퓨터에 저장했다 서버 요청 시 네트워크를 통해 서버로 전달되므로 보안에 취약하다. 반면 세션은 서버에 저장되고 브라우저 단위로 관리되므로 캐시에 비해 보안성이 높다.;web
94;Request 전송 방식의 종류를 설명하세요.;Request 전송 방식에는 GET, POST, DELETE, PUT/PUSH 방식이 있다. Get 방식은 URL의 쿼리 문자열에 데이터를 같이 전달하는 방식으로 데이터 길이에 제한이 있으며 보안에 취약하다. POST 방식은 헤더에 데이터를 넣어 전송하기 때문에 보안에 유리한 면이 있으며 데이터 길이에 제한이 없으나 GET에 비해 속도가 느리다. DELETE 방식은 RESTFUL에서 삭제 기능에 주로 사용된다. PUT/PUSH 방식은 RESTFUL에서 수정 작업 시 주로 사용된다.;web
95;RESTFUL이란?;URL만 확인해도 어떤 작업이 진행되는지 바로 알 수 있도록 하나의 데이터가 하나의 URL을 갖도록 작업하는 방식이다.;web
96;Spring에서 DI란 무엇인지 설명하세요.;DI란 Dependency Injection(의존성 주입)의 약자로, 객체 간의 의존성을 줄이기 위해 사용되는 Spring의 IOC 컨테이너의 구체적인 구현 방식이다.;web
97;Spring의 AOP란?;AOP는 Aspect Oriented Programming(관점 지향 프로그래밍)의 약자로, 기존의 OOP(객체 지향 프로그래밍)에서 기능별로 class를 분리했음에도 로그, 트랜잭션, 자원 해제, 성능 테스트 메서드처럼 공통적으로 반복되는 중복코드가 여전히 발생하는 단점을 해결하고자 나온 방식으로, 이러한 공통 코드를 "횡단 관심사"라 표현하며 개발 코드에서는 비즈니스 로직에 집중하고 실행 시에 비즈니스 로직 앞, 뒤 등 원하는 지점에 해당 공통 관심사를 수행할 수 있게 함으로써 중복코드를 줄일 수 있는 방식이다.;web
98;MVC 패턴이란?;데이터 처리와 접근을 담당하는 Model, 클라이언트에게 보이는 화면을 담당하는 View, Model과 View를 제어하는 Controller 총 3가지 부분으로 나눔으로써 데이터와 화면 간의 의존 관계를 벗어날 수 있게 하는 개발기법이다.;web
99;Servlet과 JSP의 차이점은?;Servlet은 자바 언어로 웹 개발을 위해 만들어진 것으로, Container가 이해할 수 있게 구성된 순수 JAVA 코드로만 이루어진 것이고, JSP는 HTML 기반에 JAVA 코드를 블록화하여 삽입한 것으로 Servlet을 좀 더 쉽게 접근할 수 있도록 만들어진 것이다.;web
100;파이프라이닝이란?;파이프 라이닝은 여러 명령이 시스템에 입력될 때 주로 사용되는 고급 마이크로프로세서에서 가장 많이 사용되는 기술 중 하나이다. 파이프라인을 통해 프로세서에서 명령을 축적하고 순서에 따라 명령을 저장 및 실행할 수 있다.;architecture
101;Database에서 Index란?;Table에 대한 동작 속도를 높여 주는 자료 도구로써 빠른 검색을 가능하게 한다.;web
102;SI란?;System Integration의 약자로 시스템 통합 사업으로 고객의 기존 전산 시스템을 통합하거나 새로운 시스템을 구축하는 작업이다.;web
103;[C언어] 포인터란?;포인터는 어떤 변수의 주솟값을 저장하는 변수이다. 변수명 앞에 *을 붙여 선언하고, &을 붙여 특정 변수의 주솟값을 얻는다.;language
104;[Java] Java의 장점 및 단점을 설명하세요.;Java는 JVM 위에서 동작하기 때문에 운영체제에 독립적이며 Garbage Collector가 메모리를 관리해 주기 때문에 편리하다는 장점이 있지만, JVM 위에서 동작하기 때문에 실행 속도가 상대적으로 느리며, 다중 상속이나 타입에 엄격한 등 제약이 많다는 것이 단점이다.;language
105;[Java] Java가 다중 상속을 지원하지 않는 이유는?;다중 상속 지원 시 다이아몬드 문제가 발생할 수 있기 때문이다. 동일한 명의 메소드를 구현한 두 클래스를 다중 상속받는 클래스에서 코드의 충돌이 발생할 수 있다.;language
106;가비지 컬렉션(Garbage Collection)이란?;시스템에서 더 이상 사용하지 않는 동적 할당된 메모리 블록을 찾아 다시 사용할 수 있는 자원으로 회수하는 것으로, 자동으로 이루어지기 때문에 메모리 영역을 관리하지 않아도 된다.;web
107;[Java] Java의 List, Set, Map의 차이를 설명하세요.;List는 데이터를 순차적으로 저장하며 데이터의 중복 및 null을 허용한다. Set은 순서에 상관없이 Key로만 데이터를 저장하며 Key의 중복 및 null을 허용하지 않는다. Map은 순서 없이 Key와 Value로 데이터를 저장하며 Value는 중복을 허용하지만, Key 중복은 허용하지 않고 Key로 null을 허용하지 않는다.;language
108;Stream API의 장점 및 단점을 설명하세요.;Stream API는 코드를 간결하게 작성하여 가독성을 높일 수 있고 병렬스트림과 같은 기술을 통해 처리 속도를 높일 수 있는 장점이 있으나, 잘못 사용 시 기존의 Java보다 성능이 떨어질 수 있으며 코드들이 추상화되어 있어 실수 발생 우려가 있다.;language
109;[Java] Synchronized란?;Java에서 지원하는 synchronized 키워드는 여러 스레드가 하나의 자원을 이용하고자 할 때 한 스레드가 해당 자원을 사용 중인 경우, 데이터에 접근할 수 없도록 막는 키워드이다. synchronized 키워드 이용 시 병렬 상황에서 자원의 접근을 안전하게 하지만, 자원을 이용하지 않는 스레드는 락에 의한 병목 현상이 발생하게 된다.;language
110;[Java] Java의 동작 과정을 설명하세요.;1. Java 소스 파일을 javac로 컴파일하여 class 파일(Java 바이트 코드)을 생성한다. 2. 클래스 로더가 컴파일된 Java 바이트 코드를 런타임 데이터 영역(Runtime data Areas)으로 로드한다. 3. 실행 엔진(Execution Engine)이 자바 바이트 코드를 실행한다.;language
111;MSA의 장점을 설명하세요.;1. CI/CD에 적합하게 짧은 시간 안에 원하는 서비스를 수정 및 배포할 수 있다. 2. 상황에 맞게 기술 스택을 유연하게 적용할 수 있다. 3. 필요한 서비스만을 scale out 할 수 있다. 4. 하나의 서비스에 문제가 발생하더라도 다른 서비스에 문제를 발생시키지 않는다. 문제가 생긴 서비스 호출로 인한 문제 발생 시, Circuit Breaker로 해결한다.;architecture